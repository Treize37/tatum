=begin
#Tatum API

## Authentication  <!-- ReDoc-Inject: <security-definitions> -->

OpenAPI spec version: 3.9.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.31
=end

require 'spec_helper'
require 'json'

# Unit tests for Tatum::BlockchainQuorumApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'BlockchainQuorumApi' do
  before do
    # run before each test
    @instance = Tatum::BlockchainQuorumApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BlockchainQuorumApi' do
    it 'should create an instance of BlockchainQuorumApi' do
      expect(@instance).to be_instance_of(Tatum::BlockchainQuorumApi)
    end
  end

  # unit tests for quorum_blockchain_transfer
  # Send Quorum transaction
  # &lt;h4&gt;2 credits per API call.&lt;/h4&gt;&lt;br/&gt; &lt;p&gt;Send Quorum transaction account to account.&lt;br/&gt;&lt;br/&gt; This operation can be used to send native assets between two accounts or to store data into the blockchain.&lt;/p&gt; 
  # @param body 
  # @param x_quorum_endpoint URL of the Quorum network
  # @param [Hash] opts the optional parameters
  # @return [TransactionHash]
  describe 'quorum_blockchain_transfer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for quorum_generate_account
  # Generate Quorum Account
  # &lt;h4&gt;2 credit per API call.&lt;/h4&gt;&lt;br/&gt; &lt;p&gt;Generate address account. Account must be protected with the password. To start using account, it must be unlocked via &lt;a href&#x3D;\&quot;#operation/QuorumUnlockAccount\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Unlock Quorum Account method&lt;/a&gt;.&lt;/p&gt; 
  # @param body 
  # @param x_quorum_endpoint URL of the Quorum network
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20078]
  describe 'quorum_generate_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for quorum_get_block
  # Get Quorum block by hash
  # &lt;h4&gt;1 credit per API call.&lt;/h4&gt;&lt;br/&gt;&lt;p&gt;Get Quorum block by block hash or block number.&lt;/p&gt;
  # @param x_quorum_endpoint URL of the Quorum network
  # @param hash Block hash or block number
  # @param [Hash] opts the optional parameters
  # @return [QuorumBlock]
  describe 'quorum_get_block test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for quorum_get_current_block
  # Get current block number
  # &lt;h4&gt;1 credit per API call.&lt;/h4&gt;&lt;br/&gt;&lt;p&gt;Get Quorum current block number. This is the number of the latest block in the blockchain.&lt;/p&gt;
  # @param x_quorum_endpoint URL of the Quorum network
  # @param [Hash] opts the optional parameters
  # @return [BigDecimal]
  describe 'quorum_get_current_block test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for quorum_get_transaction
  # Get Quorum Transaction
  # &lt;h4&gt;1 credit per API call.&lt;/h4&gt;&lt;br/&gt;&lt;p&gt;Get Quorum transaction by transaction hash.&lt;/p&gt;
  # @param x_quorum_endpoint URL of the Quorum network
  # @param hash Transaction hash
  # @param [Hash] opts the optional parameters
  # @return [QuorumTx]
  describe 'quorum_get_transaction test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for quorum_get_transaction_receipt
  # Get Quorum transaction receipt
  # &lt;h4&gt;1 credit per API call.&lt;/h4&gt;&lt;br/&gt; &lt;p&gt;Get Quorum Transaction Receipt by transaction hash. Transaction receipt is available only after transaction is included in the block and contains information about paid fee or created contract address and much more.&lt;/p&gt; 
  # @param x_quorum_endpoint URL of the Quorum network
  # @param hash Transaction hash
  # @param [Hash] opts the optional parameters
  # @return [QuorumTx]
  describe 'quorum_get_transaction_receipt test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for quorum_unlock_account
  # Unlock Quorum Account
  # &lt;h4&gt;2 credit per API call.&lt;/h4&gt;&lt;br/&gt; &lt;p&gt;Unlock account.&lt;/p&gt; 
  # @param body 
  # @param x_quorum_endpoint URL of the Quorum network
  # @param address Account address
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20079]
  describe 'quorum_unlock_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for quorum_web3_driver
  # Web3 HTTP driver
  # &lt;h4&gt;2 credits per API call.&lt;/h4&gt;&lt;br/&gt; &lt;p&gt;Use this endpoint URL as a http-based web3 driver to connect directly to the Quorum node. To learn more about Quorum Web3, please visit &lt;a href&#x3D;\&quot;https://ethereum.org/en/developers/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Ethereum developer&#x27;s guide.&lt;/a&gt;&lt;/p&gt; 
  # @param body 
  # @param x_quorum_endpoint URL of the Quorum network
  # @param x_api_key Tatum X-API-Key used for authorization.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'quorum_web3_driver test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
