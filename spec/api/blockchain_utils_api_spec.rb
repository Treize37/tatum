=begin
#Tatum API

## Authentication  <!-- ReDoc-Inject: <security-definitions> -->

OpenAPI spec version: 3.9.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.31
=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::BlockchainUtilsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'BlockchainUtilsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::BlockchainUtilsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BlockchainUtilsApi' do
    it 'should create an instance of BlockchainUtilsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::BlockchainUtilsApi)
    end
  end

  # unit tests for approve_transfer_custodial_wallet
  # Approve transfer of assets from custodial wallet
  # &lt;h4&gt;2 credits per API call.&lt;/h4&gt;&lt;br/&gt; &lt;p&gt;Approve transfer of assets from the custodial smart contract wallet.&lt;br/&gt; Supported blockchains: &lt;ul&gt; &lt;li&gt;Binance Smart Chain&lt;/li&gt; &lt;li&gt;Harmony.ONE&lt;/li&gt; &lt;li&gt;Ethereum&lt;/li&gt; &lt;li&gt;Celo&lt;/li&gt; &lt;li&gt;Harmony.ONE&lt;/li&gt; &lt;li&gt;XDC Network (XinFin)&lt;/li&gt; &lt;li&gt;Polygon (Matic)&lt;/li&gt; &lt;/ul&gt; &lt;/p&gt; 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2005]
  describe 'approve_transfer_custodial_wallet test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for estimate_fee_blockchain
  # Estimate fee for transaction
  # &lt;h4&gt;2 credits per API call.&lt;/h4&gt;&lt;br/&gt; &lt;p&gt;Estimate current transaction fee for different operations.&lt;br/&gt; Supported blockchains: &lt;ul&gt; &lt;li&gt;Bitcoin&lt;/li&gt; &lt;li&gt;Litecoin&lt;/li&gt; &lt;li&gt;Harmony.ONE&lt;/li&gt; &lt;li&gt;The XDC Network&lt;/li&gt; &lt;li&gt;Ethereum&lt;/li&gt; &lt;li&gt;Celo&lt;/li&gt; &lt;li&gt;Binance Smart Chain&lt;/li&gt; &lt;li&gt;Polygon&lt;/li&gt; &lt;li&gt;Elrond&lt;/li&gt; &lt;/ul&gt; &lt;/p&gt; 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2006]
  describe 'estimate_fee_blockchain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for generate_custodial_wallet
  # Generate custodial wallet address
  # &lt;h4&gt;2 credits per API call.&lt;/h4&gt;&lt;br/&gt; &lt;p&gt;Generate new custodial smart contract address on the blockchain. It&#x27;s possible to enable tokens, which should be detected and supported on that address. This address enables custodial providers to receive native assets, ERC20 / ERC721 / ERC1155 tokens on behalf of their customers on dedicated blockchain address, but in the same time it can initiate transfer of those assets away. Gas required for the transfer from that address is going to be deducted from the providers address - the one, which was used to generate the address on the blockchain.&lt;br/&gt; There are multiple options, how this address can be setup - it cannot be changed in the future: &lt;ul&gt; &lt;li&gt;Native assets only - ETH, BSC, CELO, MATIC, ONE, TRX&lt;/li&gt; &lt;li&gt;Native assets + ERC20 tokens&lt;/li&gt; &lt;li&gt;Native assets + ERC721 tokens&lt;/li&gt; &lt;li&gt;Native assets + ERC1155 tokens - TRON does not support 1155 standard&lt;/li&gt; &lt;li&gt;Native assets + ERC20 + ERC721 tokens&lt;/li&gt; &lt;li&gt;Native assets + ERC20 + ERC1155 tokens - TRON does not support 1155 standard&lt;/li&gt; &lt;li&gt;Native assets + ERC721 + ERC1155 tokens - TRON does not support 1155 standard&lt;/li&gt; &lt;li&gt;Native assets + ERC20 + ERC721 + ERC1155 tokens - TRON does not support 1155 standard&lt;/li&gt; &lt;/ul&gt;&lt;br/&gt; All of these options could be enabled with a batch mode as well - in 1 transaction, it is possible to transfer multiple different assets from that address, e.g. ETH + USDC + ERC721 token. Without batch mode, 3 separate transaction must have been performed.&lt;br/&gt; This operation deploys a smart contract on the blockchain. More assets you will support, more intial gas will be used for address creation. Batch mode adds more gas for every type.&lt;br/&gt; Supported blockchains: &lt;ul&gt; &lt;li&gt;Binance Smart Chain&lt;/li&gt; &lt;li&gt;Harmony.ONE&lt;/li&gt; &lt;li&gt;Ethereum&lt;/li&gt; &lt;li&gt;Celo&lt;/li&gt; &lt;li&gt;TRON - without 1155&lt;/li&gt; &lt;li&gt;Polygon (Matic)&lt;/li&gt; &lt;/ul&gt; &lt;/p&gt; 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2005]
  describe 'generate_custodial_wallet test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for generate_custodial_wallet_batch
  # Generate custodial wallet address
  # &lt;h4&gt;2 credits per API call.&lt;/h4&gt;&lt;br/&gt; &lt;p&gt;Generate new custodial smart contract address on the blockchain. This address enables custodial providers to receive native assets, ERC20 / ERC721 / ERC1155 tokens on behalf of their customers on dedicated blockchain address, but in the same time it can initiate transfer of those assets away. Gas required for the transfer from that address is going to be deducted from the providers address - the one, which was used to generate the address on the blockchain.&lt;br/&gt; This operation deploys a smart contract on the blockchain.&lt;br/&gt; Supported blockchains: &lt;ul&gt; &lt;li&gt;Ethereum&lt;/li&gt; &lt;li&gt;Binance Smart Chain&lt;/li&gt; &lt;li&gt;Celo&lt;/li&gt; &lt;li&gt;Polygon (Matic)&lt;/li&gt; &lt;li&gt;Harmony.ONE&lt;/li&gt; &lt;li&gt;XDC Network (XinFin)&lt;/li&gt; &lt;li&gt;Tron&lt;/li&gt; &lt;/ul&gt; &lt;/p&gt; 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_testnet_type Type of Ethereum testnet. Defaults to ropsten.
  # @return [InlineResponse2005]
  describe 'generate_custodial_wallet_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for s_c_get_contract_address
  # Get contract address from transaction
  # &lt;h4&gt;1 credit per API call.&lt;/h4&gt;&lt;br/&gt;&lt;p&gt;Get smart contract address from deploy transaction.&lt;/p&gt;
  # @param chain Blockchain to work with
  # @param hash Transaction hash
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2007]
  describe 's_c_get_contract_address test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for s_c_get_custodial_addresses
  # Get custodial addresses from transaction
  # &lt;h4&gt;1 credit per API call.&lt;/h4&gt;&lt;br/&gt;&lt;p&gt;Get custodial smart contract addresses from deploy transaction.&lt;/p&gt;
  # @param chain Blockchain to work with
  # @param hash Transaction hash
  # @param [Hash] opts the optional parameters
  # @return [Array<String>]
  describe 's_c_get_custodial_addresses test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for transfer_custodial_wallet
  # Transfer assets from custodial wallet
  # &lt;h4&gt;2 credits per API call.&lt;/h4&gt;&lt;br/&gt; &lt;p&gt;Transfer assets from the custodial smart contract wallet. Originator of this transaction must be the address which created the address. It&#x27;s possible to transfer only 1 assets in 1 transaction.&lt;br/&gt; Supported blockchains: &lt;ul&gt; &lt;li&gt;Binance Smart Chain&lt;/li&gt; &lt;li&gt;Harmony.ONE&lt;/li&gt; &lt;li&gt;Ethereum&lt;/li&gt; &lt;li&gt;Celo&lt;/li&gt; &lt;li&gt;TRON&lt;/li&gt; &lt;li&gt;XDC Network (XinFin)&lt;/li&gt; &lt;li&gt;Polygon (Matic)&lt;/li&gt; &lt;/ul&gt; &lt;/p&gt; 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2005]
  describe 'transfer_custodial_wallet test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for transfer_custodial_wallet_batch
  # Transfer multiple assets from custodial wallet
  # &lt;h4&gt;2 credits per API call.&lt;/h4&gt;&lt;br/&gt; &lt;p&gt;Transfer assets from the custodial smart contract wallet. Originator of this transaction must be the address which created the address. It&#x27;s possible to transfer any amount of different assets in 1 transaction, if the wallet was generated with the batch option enabled.&lt;br/&gt; Supported blockchains: &lt;ul&gt; &lt;li&gt;Binance Smart Chain&lt;/li&gt; &lt;li&gt;Harmony.ONE&lt;/li&gt; &lt;li&gt;XDC Network (XinFin)&lt;/li&gt; &lt;li&gt;Ethereum&lt;/li&gt; &lt;li&gt;Celo&lt;/li&gt; &lt;li&gt;Tron&lt;/li&gt; &lt;li&gt;Polygon (Matic)&lt;/li&gt; &lt;/ul&gt; &lt;/p&gt; 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2005]
  describe 'transfer_custodial_wallet_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
