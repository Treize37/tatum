=begin
#Tatum API

## Authentication  <!-- ReDoc-Inject: <security-definitions> -->

OpenAPI spec version: 3.9.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.31
=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::TatumServiceApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TatumServiceApi' do
  before do
    # run before each test
    @instance = SwaggerClient::TatumServiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TatumServiceApi' do
    it 'should create an instance of TatumServiceApi' do
      expect(@instance).to be_instance_of(SwaggerClient::TatumServiceApi)
    end
  end

  # unit tests for freeze_api_key
  # Freeze API Key
  # &lt;h4&gt;2 credits per API call.&lt;/h4&gt;&lt;br/&gt;&lt;p&gt;Freeze the API Key. It&#x27;s not possible to perform sensitive operations like send ledger transaction, send off-chain transaction, send blockchain transaction, broadcast blockchain transaction, perform Order book trade or create blockage. Only read operations are permitted.&lt;/p&gt; 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'freeze_api_key test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_credits
  # List credit consumption for last month
  # &lt;h4&gt;1 credit per API call.&lt;/h4&gt;&lt;br/&gt;&lt;p&gt;List usage information of credits.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @return [Array<Consumption>]
  describe 'get_credits test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_exchange_rate
  # Get currenct exchange rate of the supported FIAT / crypto asset
  # &lt;h4&gt;1 credit per API call.&lt;/h4&gt;&lt;br/&gt; &lt;p&gt;Get currenct exchange rate of the supported FIAT / crypto asset. Base pair is EUR by default. E.g. to obtain exchange rate for the Bitcoin, response value for the API call will be expressed as 1 BTC &#x3D; 10,000 EUR.&lt;/p&gt; 
  # @param currency FIAT or crypto asset
  # @param [Hash] opts the optional parameters
  # @option opts [String] :base_pair FIAT to convert as a basePair
  # @return [ExchangeRate]
  describe 'get_exchange_rate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_version
  # Get API version
  # &lt;h4&gt;1 credit per API call.&lt;/h4&gt;&lt;br/&gt;&lt;p&gt;Get current version of the API.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20034]
  describe 'get_version test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for unfreeze_api_key
  # Unfreeze API Key
  # &lt;h4&gt;2 credits per API call.&lt;/h4&gt;&lt;br/&gt;&lt;p&gt;Unfreeze the API Key. It&#x27;s possible to perform sensitive operations like send ledger transaction, send off-chain transaction, send blockchain transaction, broadcast blockchain transaction, perform Order book trade or create blockage again.&lt;/p&gt; 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'unfreeze_api_key test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
